from django.shortcuts import render

from django.shortcuts import render, redirect
from .models import User_name
from .forms import User_nameForm , login_userForm
from .forms import login_user
from django.contrib.auth import authenticate, login ,logout
from django.contrib import messages
from django.contrib.auth.models import User         


# Create your views here.
def home(request):
    all_user_name = User_name.objects.all()
    return render(request, 'home.html', {'all':all_user_name})

def join(request):         # display user list, of the chatbot
    if request.method == "POST":
        form = User_nameForm(request.POST or None)
        if form.is_valid():
            form.save()
        else:
            fname = request.POST['fname']
            lname = request.POST['lname']
            age = request.POST['age']
            email = request.POST['email']
            passwd = request.POST['passwd']   #remove later (display user information)
                            
            messages.success(request, ('There was an error in your form! Please try again'))
            #return redirect('join')
            return render(request, 'join.html', {'fname':fname, 'lname':lname, 'age':age, 'email':email, 'passwd':passwd,})
        messages.success(request, 'You have been added to the list')
        return redirect('home')
    else:
        form = User_nameForm()
        return render(request, 'join.html', {'form': form})
    
#take you straight to chatbot
def chatbot(request):
     all_login_user = login_user.objects.all()
     return render(request, 'chatbot.html', {'all':all_login_user})

#take you straight to login
def use_login(request):
    if request.method == "POST":
        form1 = login_userForm(request.POST or None)
        if form1.is_valid():
            fname = form1.cleaned_data['fname'] # request.POST
            passwd =form1.cleaned_data['passwd'] # request.POST
            user = authenticate(username=fname, password=passwd)
            if user is not None and user.is_active:
                login(request, user)
                messages.success(request, 'You can chat')
                return redirect('chatbot')
            else:
                messages.error(request, 'Invalid username or password')
                #added you can remove
               
        else:
            messages.error(request, 'Invalid form data')
            #added you can remove
              # real login.html    return redirect('user_login')
    else:
        form1 = login_userForm()
    return render(request, 'user_login.html', {'form1': form1}) 
            
# registrations views
def register(request):
    if request.method == 'POST':
        fname = request.POST['username']
        email = request.POST['email']
        passwd = request.POST['passwd']
        passwd2 = request.POST['password2']

        if passwd == passwd2:
            try:
                user = User.objects.create_user(username=fname, email=email, password=passwd)
                user.save()
                user = authenticate(username=fname, password=passwd)
                login(request, user)
                return redirect('user_login')
            except:
                error_message = 'Error creating account'
                return render(request, 'register.html', {'error_message': error_message})
        else:
            error_message = 'Password dont match'
            return render(request, 'register.html', {'error_message': error_message})
    return render(request, 'register.html')

# logout views
